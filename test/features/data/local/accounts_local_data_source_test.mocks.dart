// Mocks generated by Mockito 5.0.17 from annotations
// in rent_ready_task/test/features/data/local/accounts_local_data_source_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:rent_ready_task/core/cache/cache.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [Cache].
///
/// See the documentation for Mockito's code generation for more information.
class MockCache extends _i1.Mock implements _i2.Cache {
  MockCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void clear() => super.noSuchMethod(Invocation.method(#clear, []),
      returnValueForMissingStub: null);
  @override
  bool contains(String? key) => (super
          .noSuchMethod(Invocation.method(#contains, [key]), returnValue: false)
      as bool);
  @override
  V? get<V>(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as V?);
  @override
  bool getBoolean(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBoolean, [key]),
          returnValue: false) as bool);
  @override
  double getDouble(String? key) => (super
          .noSuchMethod(Invocation.method(#getDouble, [key]), returnValue: 0.0)
      as double);
  @override
  List<V>? getList<V>(String? key) =>
      (super.noSuchMethod(Invocation.method(#getList, [key])) as List<V>?);
  @override
  int getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key]), returnValue: 0)
          as int);
  @override
  String getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key]), returnValue: '')
          as String);
  @override
  bool isEmpty() =>
      (super.noSuchMethod(Invocation.method(#isEmpty, []), returnValue: false)
          as bool);
  @override
  void remove(String? key) =>
      super.noSuchMethod(Invocation.method(#remove, [key]),
          returnValueForMissingStub: null);
  @override
  void set<V>(String? key, V? value) =>
      super.noSuchMethod(Invocation.method(#set, [key, value]),
          returnValueForMissingStub: null);
  @override
  void setBoolean(String? key, bool? value) =>
      super.noSuchMethod(Invocation.method(#setBoolean, [key, value]),
          returnValueForMissingStub: null);
  @override
  void setDouble(String? key, double? value) =>
      super.noSuchMethod(Invocation.method(#setDouble, [key, value]),
          returnValueForMissingStub: null);
  @override
  void setInt(String? key, int? value) =>
      super.noSuchMethod(Invocation.method(#setInt, [key, value]),
          returnValueForMissingStub: null);
  @override
  void setString(String? key, String? value) =>
      super.noSuchMethod(Invocation.method(#setString, [key, value]),
          returnValueForMissingStub: null);
}
